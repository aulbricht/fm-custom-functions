/**
 *
 * Unformats a JSON object
 *
 * @param {text} json - JSON object
 * @param {text} key - key of the element to delete
 *
 * @returnSuccess {object} returns altered JSON object
 *
 * @returnError {array} error[n].code - error code
 * @returnError {array} error[n].descriptor - description of error
 * 
 * @module JSON
 * 
 * @version 1.0.2
 * @author Allen Ulbricht, https://github.com/aulbricht
 * @website http://northcoastsoftware.com
 *
 */


Let ([
	~json = json;
	~key = key;
	~jsonVal = JSONFormatElements ( ~json );
	~jsonAltered = JSONDeleteElement ( ~json; ~key );
	~result = Case (
				Left ( ~jsonVal; 1 ) = "?" ; 
					JSONSetElement ( "{}" ; 
						[ "errorCode" ; -3; JSONNumber ]; 
						[ "descriptor" ; "JSON invalid"; JSONString ]
						);
				~key = "" ; 
					JSONSetElement ( ~json; 
						[ "errorCode" ; -3; JSONNumber ]; 
						[ "descriptor" ; "JSON invalid key" ; JSONString ]
						);
				~jsonAltered
				);
	~left = Left ( ~result; 1 );
~=""];

If ( ~left = "{" or ~left = "[" ; JSONFormatElements ( ~result ) ; ~result )

)